# ref https://docs.openshift.com/container-platform/4.10/cicd/pipelines/understanding-openshift-pipelines.html#about-triggers_understanding-openshift-pipelines
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: build
spec:
  params:
  - name: git-repo
    value: $(body.repository.url)
  - name: git-revision
    value: $(body.head_commit.id)
  - name: git-repo-name
    value: $(body.repository.name)
  - name: dest-oci-repo
    value: $(body.dest_oci_repo)
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: build
spec:
  params:
  - name: git-repo
    description: The git repository url
  - name: git-revision
    description: The git revision
  - name: git-repo-name
    description: The human-friendly name of the git repo
  - name: dest-oci-repo
    description: The OCI repo to push the image to

  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: simple-build-$(tt.params.git-repo-name)-
    spec:
      serviceAccountName: pipeline
      pipelineRef:
        name: simple-build
      params:
      - name: git-repo
        value: $(tt.params.git-repo)
      - name: git-revision
        value: $(tt.params.git-revision)
      - name: output-image
        value: $(tt.params.dest-oci-repo):$(tt.params.git-revision)
      workspaces:
      - name: shared
        persistentVolumeClaim:
          claimName: tekton-build
---
apiVersion: triggers.tekton.dev/v1beta1
kind: Trigger
metadata:
  name: build
spec:
  serviceAccountName: pipeline
  bindings:
    - ref: build
  template:
     ref: build
---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: build
spec:
  serviceAccountName: pipeline
  triggers:
    - triggerRef: build
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/managed-by: EventListener
    app.kubernetes.io/part-of: Triggers
    eventlistener: build
  name: build-event-listener
spec:
  # host is left blank so the cluster can auto-generate a meaningful value.
  port:
    targetPort: http-listener
  to:
    # The Service is created by Tekton Triggers when the EventListener is created.
    kind: Service
    name: el-build
